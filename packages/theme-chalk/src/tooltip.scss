@use "common/vars" as *;
@use "mixins/mixins.scss" as mix;
@use "mixins/function.scss" as fn;
@use "animation/transition.scss" as *;

:root {
  @include mix.generate-css-vars(
    (
      tooltip: (
        transition: (
          duration: fn.getCssVar(transition, duration),
          timing-function: fn.getCssVar(
              transition,
              timing-function,
              fast-to-slow
            ),
        ),
        text: (
          color: fn.getCssVar(text, color, primary),
          size: fn.getCssVar(font, size, small),
        ),
        bg: (
          color: fn.getCssVar(bg, color),
        ),
        border: (
          primary: fn.getCssVar(border),
        ),
        arrow: (
          width: 8px,
          color: fn.getCssVar(bg, color),
        ),
        padding: fn.getCssVar(tooltip, arrow, width),
      ),
    )
  );
}

@include mix.b(tooltip) {
  @include mix.e(trigger) {
    width: fit-content;
  }
  @include mix.e(popper) {
    // transition: all fn.getCssVar(tooltip, transition, duration)
    //   fn.getCssVar(tooltip, transition, timing-function);
    width: fit-content;
    padding: fn.getCssVar(tooltip, padding);
    position: absolute;
    top: 0;
    left: 0;
    border: fn.getCssVar(tooltip, border, primary);
    background-color: fn.getCssVar(tooltip, bg, color);
    border-radius: fn.getCssVar(border-radius, base);
    font-weight: fn.getCssVar(font-weight, primary);
    font-size: fn.getCssVar(font-size, small);
    color: fn.getCssVar(tooltip, text-color);
  }
  @include mix.e(arrow) {
    position: absolute;
    width: fn.getCssVar(tooltip, arrow, width);
    height: fn.getCssVar(tooltip, arrow, width);
    background-color: inherit;
    border-top: fn.getCssVar(tooltip, border, primary);
    border-left: fn.getCssVar(tooltip, border, primary);
    -webkit-clip-path: polygon(0 0, 0 100%, 100% 0);
    clip-path: polygon(0 0, 0 100%, 100% 0);
    @include mix.m(bottom) {
      transform: rotate(45deg);
    }
    @include mix.m(right) {
      transform: rotate(-45deg);
    }
    @include mix.m(top) {
      transform: rotate(225deg);
    }
    @include mix.m(left) {
      transform: rotate(135deg);
    }
  }
}
